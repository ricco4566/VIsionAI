1. Общее описание Базы Данных (БД) и предметной области


✅ Примерная структура БД и описание основных компонентов

1.1. Назначение БД
База данных предназначена для создания и ведения централизованного каталога предметов интерьера. Ключевыми функциями являются хранение информации о самих предметах, их визуальных представлениях в виде 3D-моделей, ассоциированных с ними текстур, а также обеспечение связи каждого каталожного элемента с реальным товаром производителя.
1.2. Краткое описание предметной области
Предметная область включает:
Предметы интерьера: Широкий ассортимент товаров различных категорий (мебель, двери, окна, осветительные приборы, бытовая техника, предметы декора, отделочные материалы для стен, пола и потолка, электрика и т.д.).
Производители/Бренды: Информация о компаниях, производящих или поставляющих данные товары.
Цифровые активы:
3D-модели: Ссылки на файлы трехмерных моделей предметов.
Изображения: Ссылки на папки с изображениями товаров.
Текстуры: Каталог текстур (материалов отделки), которые могут быть применены к 3D-моделям.
Атрибуция и классификация: Товары классифицируются по категориям, стилям, основным материалам, цветам. Каждая категория товаров может обладать набором уникальных, специфичных для нее атрибутов.
1.3. Ключевые хранимые сущности
Products (Товары): Центральная таблица, содержащая общие атрибуты для всех предметов интерьера (уникальный идентификатор, название, артикул производителя, цена, описание, ссылка на товар производителя, путь к 3D-модели, путь к папке изображений, ссылки на основной бренд, категорию, стиль, цвет, материал).
Справочные таблицы (Categories, Brands, Colors_Lookup, Materials_Lookup, Styles): Хранят стандартизированные значения для атрибутов товаров, обеспечивая консистентность данных и удобство фильтрации.
Textures (Текстуры): Централизованный каталог текстур с их характеристиками (название, описание, путь к файлу текстуры, ссылки на соответствующие записи в справочниках материалов и цветов).
Product_Textures (Текстуры Товаров): Связующая таблица для реализации отношения "многие-ко-многим" между товарами и текстурами, с указанием области применения текстуры на 3D-модели.
Таблицы специфичных атрибутов категорий (например, Product_Attributes_Doors, Product_Attributes_Furniture, Product_Attributes_Wall_Materials и т.д.): Хранят уникальные для каждой категории товаров характеристики. Связаны с таблицей Products отношением "один-к-одному".
1.4. Обзор структуры
База данных имеет нормализованную реляционную структуру, нацеленную на минимизацию избыточности данных, обеспечение их целостности и гибкости для дальнейшего расширения каталога.

2. Функциональные требования к БД
2.1. Хранение данных
БД должна обеспечивать хранение детальной информации о предметах интерьера в разрезе различных категорий.
Для каждого товара должны храниться как общие атрибуты (название, артикул, бренд, категория, стиль, цена, размеры, основной цвет/материал и т.д.), так и специфичные для его категории.
Должна обеспечиваться возможность хранения путей к файлам 3D-моделей и путей к папкам с изображениями товаров.
Необходимо реализовать централизованный каталог текстур с возможностью хранения их атрибутов (название, тип материала, цвет, путь к файлу и т.д.).
БД должна поддерживать связи между товарами и применяемыми к ним текстурами, включая указание области применения текстуры на модели.
Должно обеспечиваться хранение данных в справочных таблицах (категории, бренды, стили, цвета, материалы).
2.2. Извлечение данных
Обеспечение возможности поиска и фильтрации товаров по различным общим и специфическим атрибутам.
Возможность получения полной информации о конкретном товаре, включая данные о его 3D-модели, изображениях и доступных вариантах текстур.
2.3. Управление данными
Предоставление интерфейса или механизмов для выполнения операций CRUD (Create, Read, Update, Delete) для всех сущностей БД: товары, текстуры, записи в справочниках, атрибуты категорий.
2.4. Поддержка связей
Обеспечение и поддержание целостности ссылок между товарами и записями в справочниках (категории, бренды, стили и т.д.).
Корректное поддержание связей "многие-ко-многим" между товарами и текстурами.
Корректное поддержание связей "один-к-одному" между товарами и их наборами специфических атрибутов.

3. Технические требования к БД
3.1. Тип СУБД
Предпочтительное использование реляционной системы управления базами данных PostgreSQL.
3.2. Проектирование схемы
Схема должна быть нормализована для снижения избыточности и повышения целостности данных.
Должна использоваться центральная таблица Products для общих атрибутов товаров.
Атрибуты, общие для многих сущностей, должны быть вынесены в справочные таблицы.
Специфичные для категорий атрибуты должны храниться в отдельных таблицах, связанных с Products отношением "один-к-одному".
Обязательное использование первичных и внешних ключей для определения и поддержки связей между таблицами.
Использование понятных и согласованных правил именования таблиц и полей.
3.3. Хранение файлов
В базе данных должны храниться только пути (ссылки) к файлам 3D-моделей, папкам с изображениями и файлам текстур. Сами бинарные файлы должны располагаться на выделенном файловом сервере или в облачном хранилище.
3.4. Целостность и консистентность данных
Применение ограничений базы данных (например, NOT NULL, UNIQUE, FOREIGN KEY) для обеспечения целостности.
Использование согласованных и подходящих типов данных для всех полей.
3.5. Производительность
Обеспечение приемлемой скорости выполнения основных запросов на поиск, фильтрацию и выборку данных. В дальнейшем потребуется создание необходимых индексов.
3.6. Масштабируемость и расширяемость
Архитектура БД должна позволять относительно простое добавление новых категорий товаров и новых атрибутов без необходимости кардинальной перестройки существующей схемы.
3.7. Отслеживание изменений
Для большинства таблиц предусмотреть наличие полей created_at и updated_at для фиксации времени создания и последнего изменения записи.


