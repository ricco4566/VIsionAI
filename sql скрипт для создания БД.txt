-- Создание базовых таблиц

CREATE TABLE product_types (
    product_type_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
);

CREATE TABLE categories (
    category_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    parent_id INTEGER REFERENCES categories(category_id),
    description TEXT
);

CREATE TABLE brands (
    brand_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    logo_url VARCHAR(255)
);

CREATE TABLE colors (
    color_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    hex_code VARCHAR(7),
    description TEXT
);

CREATE TABLE materials (
    material_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
);

CREATE TABLE styles (
    style_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
);

-- Основная таблица товаров

CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    brand_id INTEGER REFERENCES brands(brand_id),
    manufacturer_sku VARCHAR(100),
    description TEXT,
    manufacturer_url VARCHAR(255),
    model_3d_url VARCHAR(255),
    images_folder_url VARCHAR(255),
    dimensions VARCHAR(100), -- формат "ДхШхВ" в метрах
    main_color_id INTEGER REFERENCES colors(color_id),
    main_material_id INTEGER REFERENCES materials(material_id),
    category_id INTEGER REFERENCES categories(category_id),
    style_id INTEGER REFERENCES styles(style_id),
    price DECIMAL(10, 2),
    currency VARCHAR(3),
    in_stock BOOLEAN,
    is_active BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    product_type_id INTEGER REFERENCES product_types(product_type_id)
);

-- Специализированные таблицы для разных типов товаров

CREATE TABLE doors (
    door_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    room_type VARCHAR(100)
);

CREATE TABLE curtains (
    curtain_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    length DECIMAL(6, 2),
    width DECIMAL(6, 2),
    curtain_type VARCHAR(50)
);

CREATE TABLE furniture (
    furniture_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    room_type VARCHAR(100),
    requires_assembly BOOLEAN
);

CREATE TABLE decor_items (
    decor_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    placement_type VARCHAR(50),
    requires_power BOOLEAN
);

CREATE TABLE plumbing (
    plumbing_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    placement_type VARCHAR(50),
    requires_power BOOLEAN,
    requires_water BOOLEAN,
    plumbing_type VARCHAR(50)
);

CREATE TABLE floor_materials (
    floor_material_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    room_type VARCHAR(100),
    compatible_with_heated_floor BOOLEAN,
    sale_unit VARCHAR(50)
);

CREATE TABLE wall_materials (
    wall_material_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    room_type VARCHAR(100),
    sale_unit VARCHAR(50)
);

CREATE TABLE ceiling_materials (
    ceiling_material_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    room_type VARCHAR(100),
    sale_unit VARCHAR(50)
);

CREATE TABLE textures (
    texture_id SERIAL PRIMARY KEY,
    product_id INTEGER REFERENCES products(product_id),
    preview_image_url VARCHAR(255),
    texture_file_path VARCHAR(255),
    texture_color_id INTEGER REFERENCES colors(color_id),
    texture_material_id INTEGER REFERENCES materials(material_id),
    description TEXT,
    name VARCHAR(100),
    is_default BOOLEAN
);

CREATE TABLE electrical_switches (
    switch_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    switch_type VARCHAR(50),
    sections_count INTEGER,
    subtype VARCHAR(50)
);

CREATE TABLE electrical_sockets (
    socket_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    socket_type VARCHAR(50),
    plugs_count INTEGER,
    plug_type VARCHAR(50)
);

CREATE TABLE lighting_fixtures (
    fixture_id SERIAL PRIMARY KEY,
    product_id INTEGER UNIQUE REFERENCES products(product_id),
    has_rgb_control BOOLEAN,
    luminous_flux_lm INTEGER,
    color_temperature_k INTEGER,
    voltage_v INTEGER,
    max_wattage_per_bulb_w DECIMAL(5, 2),
    bulbs_count INTEGER,
    socket_type VARCHAR(20),
    light_source_type VARCHAR(50)
);

-- Создание индексов

CREATE INDEX idx_products_name ON products(name);
CREATE INDEX idx_products_brand_id ON products(brand_id);
CREATE INDEX idx_products_category_id ON products(category_id);
CREATE INDEX idx_products_price ON products(price);
CREATE INDEX idx_products_in_stock ON products(in_stock);
CREATE INDEX idx_products_product_type_id ON products(product_type_id);

CREATE INDEX idx_lighting_fixtures_color_temp ON lighting_fixtures(color_temperature_k);
CREATE INDEX idx_lighting_fixtures_luminous_flux ON lighting_fixtures(luminous_flux_lm);
CREATE INDEX idx_furniture_room_type ON furniture(room_type);
CREATE INDEX idx_doors_room_type ON doors(room_type);
CREATE INDEX idx_floor_materials_room_type ON floor_materials(room_type);
CREATE INDEX idx_wall_materials_room_type ON wall_materials(room_type);
CREATE INDEX idx_ceiling_materials_room_type ON ceiling_materials(room_type);

-- Заполнение справочных данных (опционально)

INSERT INTO product_types (name, description) VALUES 
('Двери', 'Межкомнатные и входные двери'),
('Шторы', 'Шторы, жалюзи и другие оконные покрытия'),
('Мебель', 'Мебель для различных комнат'),
('Декор', 'Предметы интерьерного декора'),
('Сантехника', 'Сантехническое оборудование'),
('Материалы для пола', 'Напольные покрытия и материалы'),
('Материалы для стен', 'Отделочные материалы для стен'),
('Материалы для потолка', 'Отделочные материалы для потолков'),
('Электрика', 'Электроустановочные изделия'),
('Освещение', 'Осветительные приборы');

INSERT INTO categories (name, description) VALUES 
('Жилые помещения', 'Товары для жилых помещений'),
('Коммерческие помещения', 'Товары для коммерческих помещений'),
('Офис', 'Товары для офисных помещений'),
('Кухня', 'Товары для кухни'),
('Ванная', 'Товары для ванной комнаты'),
('Спальня', 'Товары для спальни'),
('Гостиная', 'Товары для гостиной'),
('Прихожая', 'Товары для прихожей'),
('Детская', 'Товары для детской комнаты');

-- Триггер для обновления updated_at

CREATE OR REPLACE FUNCTION update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = NOW();
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_products_timestamp
BEFORE UPDATE ON products
FOR EACH ROW
EXECUTE FUNCTION update_timestamp();